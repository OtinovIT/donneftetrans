.wrapper {
	width: 100%;
	margin-bottom: 500px;
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	padding-top: 90px;
	padding-bottom: 90px;
	position: relative;
	@media (max-width: 620px) {
		padding-top: 0;
	}
	& > .bg {
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		z-index: -3;
		width: 100%;
		height: 100%;
		overflow: hidden;
		& > div {
			position: absolute;
			width: 100%;
			height: 100%;
			transition: opacity 0.5s cubic-bezier(0.48, 0.05, 0.92, 0.47);
			background-position: center;
			background-size: contain;
			background-repeat: no-repeat;
			&:nth-of-type(1) {
				background: linear-gradient(
					0deg,
					rgba(255, 255, 255, 1) 5%,
					rgba(0, 73, 121, 1) 50%,
					rgba(255, 255, 255, 1) 95%
				);
				opacity: 0;
			}
			&:nth-of-type(2) {
				opacity: 0;
				background-image: url(/assets/images/pages/request-bg-noise-1.png);
				background-size: auto 110%;
			}
		}
		& > img {
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);
			width: 130%;
		}
	}
	& > h2 {
		color: var(--color-third);
		margin-bottom: 70px;
		text-transform: uppercase;
		font-size: 30px;
		font-family: var(--font-1-semi-bold);
		transition: color 0.5s cubic-bezier(0.48, 0.05, 0.92, 0.47);
	}
	button {
		border: none;
		cursor: pointer;
	}
	& > div {
		width: 517px;
		height: 624px;
		@media (max-width: 620px) {
			width: auto;
		}
	}
	.card {
		position: relative;
		box-sizing: border-box;
		height: 400px;
		width: 250px;
		box-shadow: 0px 0px 15px 0px rgba(0, 0, 0, 0.1);
		padding: 15px;
		margin: 0 auto;
		background-color: #fff;
		border: 2px solid var(--color-third);
		border-radius: 5px;
		transition: border-color 0.5s;
		& > button {
			position: absolute;
		}
		& > h2 {
			padding-top: 10px;
			color: var(--color-first);
			font-family: var(--font-1-semi-bold);
			font-size: 18px;
			line-height: 1.1em;
			text-align: center;
			transform: translateZ(20px);
		}
		.start {
			left: 50%;
			bottom: -108px;
			transform: translate3d(-50%, -50%, 25px) scale(0.9);
			width: 148px;
			height: 148px;
			border-radius: 50%;
			text-transform: uppercase;
			padding: 0;
			border-radius: 50%;
			background: #ffffff;
			box-shadow: 22px 22px 44px #d9d9d9, -22px -22px 44px #ffffff;
			transition: transform 0.3s, box-shadow 0.3s;
			&:hover {
				background: linear-gradient(145deg, #e6e6e6, #ffffff);
				box-shadow: 22px 22px 44px #d9d9d9, -22px -22px 44px #ffffff;
			}
			& > span {
				margin: 0 auto;
				display: block;
				width: 50px;
				height: 50px;
				fill: var(--color-third);
				transition: fill 0.5s;
			}
		}
		& > span {
			display: block;
			position: absolute;
			transition: box-shadow 1s, background 1s, opacity 0.5s;
			box-shadow: 0 0 6px 0px rgba(0, 0, 0, 0.1);
			left: 50%;
			top: 146px;
			border-radius: 50%;
			background-color: #fff;
			transform: translate3d(-50%, 0, 19px) scale(0.9);
			width: 100px;
			height: 100px;
			& > span {
				position: absolute;
				display: block;
				transform: translate(-50%, -50%);
				width: 20px;
				height: 20px;
				background-image: url(/assets/images/svg/gear-solid.svg);
				animation: rotate 4s linear infinite;
				&:nth-of-type(1) {
					left: 58%;
					top: 58%;
				}
				&:nth-of-type(2) {
					left: 43%;
					top: 43%;
				}
			}
		}
		.firstReq,
		.secondReq {
			position: absolute;
			& > button {
				border-radius: 50%;
				transform: scale(0);
				background-color: #fff;
				box-shadow: 0px 0px 15px 0px rgb(0 0 0 / 10%);
				transition: transform 0.6s;
				font-family: var(--font-1-semi-bold);
				font-size: 16px;
				&:hover {
					color: var(--color-third);
				}
			}
			& > span {
				position: absolute;
				display: block;
				width: 15px;
				height: 15px;
				border-radius: 50%;
				background-color: rgba(255, 255, 255, 0.79);
				box-shadow: 0px 0px 10px 0px rgb(0 0 0 / 10%);
				opacity: 0;
				transition: opacity 0.5s;
				top: 50%;
				&::after,
				&::before {
					position: absolute;
					content: "";
					border-radius: 50%;
					top: 50%;
					background-color: rgb(255, 255, 255);
					box-shadow: 0px 0px 7px 0px rgb(0 0 0 / 10%);
					transform: translateY(-50%);
				}
			}
		}
		.firstReq > span::after,
		.secondReq > span::after {
			width: 20px;
			height: 20px;
		}
		.firstReq > span::before,
		.secondReq > span::before {
			width: 10px;
			height: 10px;
		}
		.firstReq {
			left: -79px;
			bottom: -220px;
			@media (max-width: 620px) {
				left: -17px;
				bottom: -253px;
			}
			& > span {
				right: -12px;
				top: -36px;
				transform: rotate(127deg);
				@media (max-width: 620px) {
					right: 22px;
					top: -54px;
					transform: rotate(109deg);
				}
				&::after {
					right: -34px;
				}
				&::before {
					left: -24px;
				}
			}
			& > button {
				width: 140px;
				height: 140px;
			}
		}
		.secondReq {
			right: -167px;
			top: 193px;
			@media (max-width: 620px) {
				right: -14px;
				top: 645px;
			}
			& > span {
				right: 173px;
				top: 105px;
				transform: rotate(-24deg);
				@media (max-width: 620px) {
					right: 93px;
					top: -124px;
					transform: rotate(78deg);
				}
				&::after {
					right: -42px;
					@media (max-width: 620px) {
						right: -100px;
					}
				}
				&::before {
					left: -37px;
					@media (max-width: 620px) {
						left: -85px;
					}
				}
			}
			& > button {
				width: 130px;
				height: 130px;
			}
		}
	}
}
.active {
	& > .bg {
		& > div:nth-of-type(1),
		& > div:nth-of-type(2) {
			opacity: 0.8;
		}
	}
	.card {
		border-color: white;
		& > span {
			box-shadow: none;
		}
		.start {
			transform: translate(-50%, -50%) scale(0.9);
			transform: translate3d(-50%, -50%, 10px) scale(0.9);
			background: linear-gradient(145deg, #e6e6e6, #ffffff);
			box-shadow: 15px 15px 20px #d9d9d9, -22px -22px 44px #ffffff;
			& > span {
				fill: white;
			}
			&:hover {
				box-shadow: 15px 15px 20px #d9d9d9, -22px -22px 44px #ffffff;
			}
		}
		.firstReq > button,
		.secondReq > button {
			transform: scale(1);
		}
		.firstReq > span,
		.secondReq > span {
			opacity: 1;
		}
	}
}

@keyframes rotate {
	from {
		transform: translate(-50%, -50%) rotate(0);
	}
	to {
		transform: translate(-50%, -50%) rotate(360deg);
	}
}
